{"version":3,"sources":["components/Home.js","components/UserProfile.js","components/Login.js","components/AccountBalance.js","components/debit/DebitCard.js","components/debit/Debits.js","components/credit/CreditCard.js","components/credit/Credits.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","src","alt","to","Component","UserProfile","this","props","username","memberSince","Login","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogin","redirect","password","logoURL","width","onSubmit","htmlFor","type","onChange","required","AccountBalance","accountBalance","toLocaleString","style","currency","DebitCard","description","amount","date","Debits","addDebitHandler","bind","placeholder","min","step","generateDebitCards","data","cards","forEach","element","index","id","push","key","toString","CreditCard","Credits","addCreditHandler","generateCreditCards","App","loginInfo","newUser","currentUser","handleAddDebit","event","debitDescription","debitAmount","Date","toISOString","newDebit","uuidv5","Number","newDebitData","Array","debitData","totalDebit","calculateTotalAmount","reset","handleAddCredit","newCredit","newCreditData","creditData","totalCredit","fetchDebitData","fetchCreditData","axios","get","then","response","catch","error","console","log","reduce","sum","current","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0VAOqBA,E,uKAIb,OACI,yBAAKC,UAAU,eACX,yBAAKC,IAAI,iGAAiGC,IAAI,SAC9G,6CAEA,kBAAC,IAAD,CAAMC,GAAG,UACL,+C,GAVcC,aCCbC,E,uKAIb,OACI,yBAAKL,UAAU,eACX,kCACI,gDAEA,0CAAgBM,KAAKC,MAAMC,UAC3B,8CAAoBF,KAAKC,MAAME,aAAkB,6BAEjD,kCACI,2CAEA,kBAAC,IAAD,CAAMN,GAAG,WAAU,gDACnB,kBAAC,IAAD,CAAMA,GAAG,YAAW,iDACpB,kBAAC,IAAD,CAAMA,GAAG,KAAI,kD,GAjBIC,a,QCGpBM,E,kDAEjB,aACC,IAAD,8BACI,gBAYJC,aAAe,SAACC,GAEZ,IAAMC,EAAW,eAAO,EAAKC,MAAMC,MAC7BC,EAAaJ,EAAEK,OAAOC,KACtBC,EAAaP,EAAEK,OAAOG,MAC5BP,EAAYG,GAAcG,EAE1B,EAAKE,SAAS,CAAEN,KAAMF,KApB1B,EAuBAS,aAAe,SAACV,GAEZA,EAAEW,iBACF,EAAKhB,MAAMiB,UAAU,EAAKV,MAAMC,MAChC,EAAKM,SAAS,CAAEI,UAAU,KAzB1B,EAAKX,MACL,CACIC,KACA,CACIP,SAAU,GACVkB,SAAU,IAEdD,UAAU,GATlB,E,qDAgCI,GAAGnB,KAAKQ,MAAMW,SAAU,OAAQ,kBAAC,WAAD,CAAUtB,GAAG,iBAE7C,IAAIwB,EAAU,wFAEd,OACI,yBAAK3B,UAAU,eACX,kCACI,gCACI,yBAAKC,IAAK0B,EAASC,MAAM,OAD7B,kBACsD,yBAAK3B,IAAK0B,EAASC,MAAM,QAE/E,0BAAMC,SAAUvB,KAAKgB,cACjB,2BAAOQ,QAAQ,YAAf,cACA,2BAAOC,KAAK,OAAOb,KAAK,WAAWc,SAAU1B,KAAKK,aAAcS,MAAOd,KAAKQ,MAAMC,KAAKP,SAAUyB,UAAQ,IACzG,6BACA,2BAAOH,QAAQ,YAAf,cACA,2BAAOC,KAAK,WAAWb,KAAK,WAAWe,UAAQ,IAC/C,6BACA,kBAAC,OAAD,CAAM9B,GAAG,KAAI,4BAAQ4B,KAAK,SAAb,YACb,4BAAQA,KAAK,UAAb,gB,GArDW3B,aCNd8B,E,uKAIb,OACI,yCACc5B,KAAKC,MAAM4B,eAAeC,eAAe,QAAS,CAAEC,MAAO,WAAYC,SAAU,a,GAN/DlC,aCHvBmC,E,uKAIb,OACI,6BAASvC,UAAU,cACf,wBAAIA,UAAU,qBAAqBM,KAAKC,MAAMiC,aAC9C,wBAAIxC,UAAU,iBACV,uCAAaM,KAAKC,MAAMkC,OAAOL,eAAe,QAAS,CAAEC,MAAO,WAAYC,SAAU,SACtF,qCAAWhC,KAAKC,MAAMmC,Y,GATHtC,aCKlBuC,E,kDAEjB,WAAYpC,GACX,IAAD,8BACI,cAAMA,IACDe,aAAef,EAAMqC,gBAAgBC,KAAK,EAAKvB,cAFxD,E,qDAOI,OACI,6BACI,sCACA,kCACI,2CAEA,kBAAC,IAAD,CAAMnB,GAAG,gBAAe,+CACxB,kBAAC,IAAD,CAAMA,GAAG,YAAW,iDACpB,kBAAC,IAAD,CAAMA,GAAG,KAAI,4CACN,6BAEX,kBAAC,EAAD,CAAgBgC,eAAgB7B,KAAKC,MAAM4B,iBAAkB,6BAE7D,kCACI,iDACA,0BAAMN,SAAUvB,KAAKgB,cACjB,2BAAOQ,QAAQ,eAAf,iBACA,2BAAOC,KAAK,OAAOb,KAAK,cAAc4B,YAAY,YAAYb,UAAQ,IACtE,6BACA,2BAAOH,QAAQ,UAAf,qBACA,2BAAOC,KAAK,SAASgB,IAAI,IAAIC,KAAK,OAAO9B,KAAK,SAAS4B,YAAY,OAAOb,UAAQ,IAClF,6BACA,4BAAQF,KAAK,UAAb,YAKR,6BAAS/B,UAAU,mBACdM,KAAK2C,mBAAmB3C,KAAKC,MAAM2C,U,yCAMjCA,GAEf,IAAIC,EAAQ,GAkBZ,OAhBAD,EAAKE,SAAQ,SAACC,EAASC,GAEnB,IAAMd,EAAca,EAAQb,YACtBC,EAASY,EAAQZ,OACjBc,EAAKF,EAAQE,GACbb,EAAOW,EAAQX,KAErBS,EAAMK,KAAK,kBAAC,EAAD,CACPC,IAAKH,EAAMI,WACXlB,YAAaA,EACbC,OAAQA,EACRc,GAAIA,EACJb,KAAMA,QAIPS,M,GAhEqB/C,aCLfuD,E,uKAIb,OACI,6BAAS3D,UAAU,eACf,wBAAIA,UAAU,sBAAsBM,KAAKC,MAAMiC,aAC/C,wBAAIxC,UAAU,kBACV,uCAAaM,KAAKC,MAAMkC,OAAOL,eAAe,QAAS,CAAEC,MAAO,WAAYC,SAAU,SACtF,qCAAWhC,KAAKC,MAAMmC,Y,GATFtC,aCKnBwD,E,kDAEjB,WAAYrD,GACX,IAAD,8BACI,cAAMA,IACDe,aAAef,EAAMsD,iBAAiBhB,KAAK,EAAKvB,cAFzD,E,qDAOI,OACI,6BACI,uCACA,kCACI,2CAEA,kBAAC,IAAD,CAAMnB,GAAG,gBAAe,+CACxB,kBAAC,IAAD,CAAMA,GAAG,WAAU,gDACnB,kBAAC,IAAD,CAAMA,GAAG,KAAI,4CACN,6BAEX,kBAAC,EAAD,CAAgBgC,eAAgB7B,KAAKC,MAAM4B,iBAAkB,6BAE7D,kCACI,kDACA,0BAAMN,SAAUvB,KAAKgB,cACjB,2BAAOQ,QAAQ,eAAf,iBACA,2BAAOC,KAAK,OAAOb,KAAK,cAAc4B,YAAY,YAAYb,UAAQ,IACtE,6BACA,2BAAOH,QAAQ,UAAf,qBACA,2BAAOC,KAAK,SAASgB,IAAI,IAAIC,KAAK,OAAO9B,KAAK,SAAS4B,YAAY,OAAOb,UAAQ,IAClF,6BACA,4BAAQF,KAAK,UAAb,YAIR,6BAAS/B,UAAU,oBACdM,KAAKwD,oBAAoBxD,KAAKC,MAAM2C,U,0CAMjCA,GAEhB,IAAIC,EAAQ,GAkBZ,OAhBAD,EAAKE,SAAQ,SAACC,EAASC,GAEnB,IAAMd,EAAca,EAAQb,YACtBC,EAASY,EAAQZ,OACjBc,EAAKF,EAAQE,GACbb,EAAOW,EAAQX,KAErBS,EAAMK,KAAK,kBAAC,EAAD,CACPC,IAAKH,EAAMI,WACXlB,YAAaA,EACbC,OAAQA,EACRc,GAAIA,EACJb,KAAMA,QAIPS,M,GA/DsB/C,aCShB2D,E,kDAEjB,aACC,IAAD,8BACI,gBAoEJvC,UAAY,SAACwC,GAET,IAAMC,EAAO,eAAO,EAAKnD,MAAMoD,aAC/BD,EAAQzD,SAAWwD,EAAUxD,SAC7B,EAAKa,SAAS,CAAE6C,YAAaD,KAzEjC,EA4EAE,eAAiB,SAACC,GAGdA,EAAM7C,iBAEN,IAAM8C,EAAmBD,EAAMnD,OAAOuB,YAAYpB,MAC5CkD,EAAcF,EAAMnD,OAAOwB,OAAOrB,MAClCsB,GAAO,IAAI6B,MAAOC,cAGpBC,EACJ,CACIlB,GAJOmB,YAAOhC,EAAM,wCAKpBF,YAAa6B,EACb5B,OAAQkC,OAAOL,GACf5B,KAAMA,GAENkC,EAAY,YAAOC,MAAP,YAAgB,EAAK/D,MAAMgE,WAA3B,QAAsCL,KACtD,EAAKpD,SAAS,CAAEyD,UAAWF,IAC3B,EAAKvD,SAAS,CAAE0D,WAAY,EAAKC,qBAAqBJ,KAEtDR,EAAMnD,OAAOgE,SAjGjB,EAoGAC,gBAAkB,SAACd,GAGfA,EAAM7C,iBAEN,IAAM8C,EAAmBD,EAAMnD,OAAOuB,YAAYpB,MAC5CkD,EAAcF,EAAMnD,OAAOwB,OAAOrB,MAClCsB,GAAO,IAAI6B,MAAOC,cAGpBW,EACJ,CACI5B,GAJOmB,YAAOhC,EAAM,wCAKpBF,YAAa6B,EACb5B,OAAQkC,OAAOL,GACf5B,KAAMA,GAEN0C,EAAa,YAAOP,MAAP,YAAgB,EAAK/D,MAAMuE,YAA3B,QAAuCF,KACxD,EAAK9D,SAAS,CAAEgE,WAAYD,IAC5B,EAAK/D,SAAS,CAAEiE,YAAa,EAAKN,qBAAqBI,KAEvDhB,EAAMnD,OAAOgE,SAvHb,EAAKnE,MACL,CACIoD,YACA,CACI1D,SAAU,aACVC,YAAa,YAEjBqE,UAAW,GACXO,WAAY,GACZN,YAAa,EACbO,aAAc,GAZtB,E,gEAkBIhF,KAAKiF,iBACLjF,KAAKkF,oB,uCAIR,IAAD,OAGIC,IAAMC,IAFW,wCAGhBC,MAAK,SAACC,GAEH,IAAMd,EAAYc,EAAS1C,KAE3B,EAAK7B,SAAS,CAAEyD,cAChB,EAAKzD,SAAS,CAAE0D,WAAY,EAAKC,qBAAqBF,QAEzDe,OAAM,SAACC,GAEJC,QAAQC,IAAIF,GACZ,EAAKzE,SAAS,CAAEyD,UAAW,U,wCAKlC,IAAD,OAGIW,IAAMC,IAFY,yCAGjBC,MAAK,SAACC,GAEH,IAAMP,EAAaO,EAAS1C,KAE5B,EAAK7B,SAAS,CAAEgE,eAChB,EAAKhE,SAAS,CAAEiE,YAAa,EAAKN,qBAAqBK,QAE1DQ,OAAM,SAACC,GAEJC,QAAQC,IAAIF,GACZ,EAAKzE,SAAS,CAAEgE,WAAY,U,2CAIfnC,GAEjB,OAAOA,EAAK+C,QAAO,SAACC,EAAKC,GAGrB,OADAD,GAAOC,EAAQ1D,SAEhB,K,+BA2DN,IAAD,OAuBI,OACI,kBAAC,IAAD,KACI,yBAAKzC,UAAU,OACX,4BAAQA,UAAU,cACd,kBAAC,SAAD,KACI,kBAAC,QAAD,CAAOoG,OAAK,EAACC,KAAK,IAAIC,UA3BpB,kBAAO,kBAAC,EAAD,CAAMnE,eAAgB,EAAKrB,MAAMqB,oBA4B1C,kBAAC,QAAD,CAAOiE,OAAK,EAACC,KAAK,eAAeE,OA3BxB,kBAC5B,kBAAC,EAAD,CAAa/F,SAAU,EAAKM,MAAMoD,YAAY1D,SAAUC,YAAa,EAAKK,MAAMoD,YAAYzD,iBA2BzE,kBAAC,QAAD,CAAO2F,OAAK,EAACC,KAAK,SAASE,OA1BxB,kBAAO,kBAAC,EAAD,eAAOxF,KAAM,EAAKD,MAAMoD,YAAa1C,UAAW,EAAKA,WAAe,EAAKjB,WA2BnF,kBAAC,QAAD,CAAO6F,OAAK,EAACC,KAAK,UAAUE,OAzBzB,kBAEnB,kBAAC,EAAD,CACIrD,KAAM,EAAKpC,MAAMgE,UACjB3C,eAAgB,EAAKrB,MAAMwE,YAAc,EAAKxE,MAAMiE,WACpDnC,gBAAiB,EAAKuB,oBAqBV,kBAAC,QAAD,CAAOiC,OAAK,EAACC,KAAK,WAAWE,OAlBzB,kBAEpB,kBAAC,EAAD,CACIrD,KAAM,EAAKpC,MAAMuE,WACjBlD,eAAgB,EAAKrB,MAAMwE,YAAc,EAAKxE,MAAMiE,WACpDlB,iBAAkB,EAAKqB,6B,GAnJN9E,aCJboG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxB,MAAK,SAAAyB,GACJA,EAAaC,gBAEdxB,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMwB,c","file":"static/js/main.1b20bbcf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * This component will be the homepage of the app, which will show the app's logo and name, along with\r\n * a login button that redirects users to the Login page\r\n */\r\nexport default class Home extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"page-header\">\r\n                <img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/160/apple/118/bank_1f3e6.png\" alt=\"bank\"/>\r\n                <h1>Bank of React</h1>\r\n\r\n                <Link to=\"/login\">\r\n                    <button>Login</button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * This component is where the user's profile is displayed, with information such as \r\n * user name and date since membership \r\n */\r\nexport default class UserProfile extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"page-header\">\r\n                <fieldset>\r\n                    <legend>User Profile</legend>\r\n\r\n                    <div>Username: {this.props.username}</div>\r\n                    <div>Member Since: {this.props.memberSince}</div><br/>\r\n\r\n                    <fieldset>\r\n                        <legend>Options</legend>\r\n\r\n                        <Link to=\"/debits\"><button>View Debits</button></Link>\r\n                        <Link to=\"/credits\"><button>View Credits</button></Link>\r\n                        <Link to=\"/\"><button>Logout</button></Link>\r\n                    </fieldset>\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\n\r\n/**\r\n * This component will allow the user to login to their account.\r\n * Upon successful login, they will be redirected to the UserProfile page.\r\n * \r\n * For the sake of this example app, no real user accounts will be used, just a mockup function.\r\n */\r\nexport default class Login extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state =\r\n        {\r\n            user:\r\n            {\r\n                username: \"\",\r\n                password: \"\",\r\n            },\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        const updatedUser = {...this.state.user};\r\n        const inputField = e.target.name;\r\n        const inputValue = e.target.value;\r\n        updatedUser[inputField] = inputValue;\r\n\r\n        this.setState({ user: updatedUser });\r\n    }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        this.props.mockLogin(this.state.user);\r\n        this.setState({ redirect: true });\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(this.state.redirect) return (<Redirect to=\"/userProfile\" />);\r\n\r\n        let logoURL = \"https://raw.githubusercontent.com/rexxars/react-hexagon/master/logo/react-hexagon.png\";\r\n\r\n        return (\r\n            <div className=\"page-header\">\r\n                <fieldset>\r\n                    <legend>\r\n                        <img src={logoURL} width=\"20\"/>&nbsp; Login &nbsp;<img src={logoURL} width=\"20\"/>\r\n                    </legend>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"username\">Username: </label>\r\n                        <input type=\"text\" name=\"username\" onChange={this.handleChange} value={this.state.user.username} required />\r\n                        <br/>\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                        <input type=\"password\" name=\"password\" required />\r\n                        <br/>\r\n                        <Link to=\"/\"><button type=\"reset\">Go Back</button></Link>\r\n                        <button type=\"submit\">Login</button>\r\n                    </form>\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\n/**\r\n * This component displays the user's account balance\r\n */\r\nexport default class AccountBalance extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                Balance: {this.props.accountBalance.toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class DebitCard extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <section className=\"debit-card\">\r\n                <h3 className=\"debit-description\">{this.props.description}</h3>\r\n                <ul className=\"debit-details\">\r\n                    <li>Amount: {this.props.amount.toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</li>\r\n                    <li>Date: {this.props.date}</li>\r\n                </ul>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport AccountBalance from '../AccountBalance';\r\nimport DebitCard from './DebitCard';\r\n\r\nexport default class Debits extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.handleSubmit = props.addDebitHandler.bind(this.handleSubmit);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Debits</h1>\r\n                <fieldset>\r\n                    <legend>Options</legend>\r\n\r\n                    <Link to=\"/userProfile\"><button>My Profile</button></Link>\r\n                    <Link to=\"/credits\"><button>View Credits</button></Link>\r\n                    <Link to=\"/\"><button>Logout</button></Link>\r\n                </fieldset><br/>\r\n\r\n                <AccountBalance accountBalance={this.props.accountBalance} /><br/>\r\n                \r\n                <fieldset>\r\n                    <legend>Add New Debit</legend>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"description\">Description: </label>\r\n                        <input type=\"text\" name=\"description\" placeholder=\"Item Name\" required />\r\n                        <br/>\r\n                        <label htmlFor=\"amount\">Amount (in USD): </label>\r\n                        <input type=\"number\" min=\"0\" step=\"0.01\" name=\"amount\" placeholder=\"9.99\" required />\r\n                        <br/>\r\n                        <button type=\"submit\">Submit</button>\r\n                    </form>\r\n                </fieldset>\r\n                \r\n\r\n                <section className=\"debit-card-grid\">\r\n                    {this.generateDebitCards(this.props.data)}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateDebitCards(data)\r\n    {\r\n        let cards = [];\r\n\r\n        data.forEach((element, index) =>\r\n        {\r\n            const description = element.description;\r\n            const amount = element.amount;\r\n            const id = element.id;\r\n            const date = element.date;\r\n\r\n            cards.push(<DebitCard \r\n                key={index.toString()}\r\n                description={description}\r\n                amount={amount}\r\n                id={id}\r\n                date={date}\r\n            />);\r\n        })\r\n\r\n        return cards;\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class CreditCard extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <section className=\"credit-card\">\r\n                <h3 className=\"credit-description\">{this.props.description}</h3>\r\n                <ul className=\"credit-details\">\r\n                    <li>Amount: {this.props.amount.toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</li>\r\n                    <li>Date: {this.props.date}</li>\r\n                </ul>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport AccountBalance from '../AccountBalance';\r\nimport CreditCard from './CreditCard';\r\n\r\nexport default class Credits extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.handleSubmit = props.addCreditHandler.bind(this.handleSubmit);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Credits</h1>\r\n                <fieldset>\r\n                    <legend>Options</legend>\r\n\r\n                    <Link to=\"/userProfile\"><button>My Profile</button></Link>\r\n                    <Link to=\"/debits\"><button>View Debits</button></Link>\r\n                    <Link to=\"/\"><button>Logout</button></Link>\r\n                </fieldset><br/>\r\n\r\n                <AccountBalance accountBalance={this.props.accountBalance} /><br/>\r\n\r\n                <fieldset>\r\n                    <legend>Add New Credit</legend>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"description\">Description: </label>\r\n                        <input type=\"text\" name=\"description\" placeholder=\"Item Name\" required />\r\n                        <br/>\r\n                        <label htmlFor=\"amount\">Amount (in USD): </label>\r\n                        <input type=\"number\" min=\"0\" step=\"0.01\" name=\"amount\" placeholder=\"9.99\" required />\r\n                        <br/>\r\n                        <button type=\"submit\">Submit</button>\r\n                    </form>\r\n                </fieldset>\r\n\r\n                <section className=\"credit-card-grid\">\r\n                    {this.generateCreditCards(this.props.data)}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateCreditCards(data)\r\n    {\r\n        let cards = [];\r\n\r\n        data.forEach((element, index) =>\r\n        {\r\n            const description = element.description;\r\n            const amount = element.amount;\r\n            const id = element.id;\r\n            const date = element.date;\r\n\r\n            cards.push(<CreditCard \r\n                key={index.toString()}\r\n                description={description}\r\n                amount={amount}\r\n                id={id}\r\n                date={date}\r\n            />);\r\n        })\r\n\r\n        return cards;\r\n    }\r\n}","import React, { Component } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport axios from 'axios';\nimport { v5 as uuidv5 } from 'uuid';\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport Login from './components/Login';\nimport Debits from './components/debit/Debits';\nimport Credits from './components/credit/Credits';\n\n/**\n * This component will manage all the routings between pages\n */\nexport default class App extends Component \n{\n    constructor()\n    {\n        super();\n        this.state =\n        {\n            currentUser:\n            {\n                username: 'bob_loblaw',\n                memberSince: '08/23/99',\n            },\n            debitData: [],\n            creditData: [],\n            totalDebit: -1,\n            totalCredit: -1\n        }\n    }\n\n    componentDidMount()\n    {\n        this.fetchDebitData();\n        this.fetchCreditData();\n    }\n\n    fetchDebitData()\n    {\n        const debitUrl = \"https://moj-api.herokuapp.com/debits\";\n\n        axios.get(debitUrl)\n        .then((response) =>\n        {\n            const debitData = response.data;\n\n            this.setState({ debitData });\n            this.setState({ totalDebit: this.calculateTotalAmount(debitData) });\n        })\n        .catch((error) =>\n        {\n            console.log(error);\n            this.setState({ debitData: [] });\n        })\n    }\n\n    fetchCreditData()\n    {\n        const creditUrl = \"https://moj-api.herokuapp.com/credits\";\n\n        axios.get(creditUrl)\n        .then((response) =>\n        {\n            const creditData = response.data;\n\n            this.setState({ creditData });\n            this.setState({ totalCredit: this.calculateTotalAmount(creditData) });\n        })\n        .catch((error) =>\n        {\n            console.log(error);\n            this.setState({ creditData: [] });\n        })\n    }\n\n    calculateTotalAmount(data)\n    {\n        return data.reduce((sum, current) =>\n        {\n            sum += current.amount;\n            return sum;\n        }, 0);\n    }\n\n    mockLogin = (loginInfo) =>\n    {\n        const newUser = {...this.state.currentUser};\n        newUser.username = loginInfo.username;\n        this.setState({ currentUser: newUser });\n    }\n\n    handleAddDebit = (event) =>\n    {\n        // Prevent browser refresh\n        event.preventDefault();\n\n        const debitDescription = event.target.description.value;\n        const debitAmount = event.target.amount.value;\n        const date = new Date().toISOString();\n        const id = uuidv5(date, 'addcd184-a939-11ea-a852-0f0463844a38');\n\n        let newDebit = \n        {\n            id: id,\n            description: debitDescription,\n            amount: Number(debitAmount),\n            date: date\n        }\n        let newDebitData = new Array(...this.state.debitData, newDebit);\n        this.setState({ debitData: newDebitData });\n        this.setState({ totalDebit: this.calculateTotalAmount(newDebitData) });\n\n        event.target.reset();\n    }\n\n    handleAddCredit = (event) =>\n    {\n        // Prevent browser refresh\n        event.preventDefault();\n\n        const debitDescription = event.target.description.value;\n        const debitAmount = event.target.amount.value;\n        const date = new Date().toISOString();\n        const id = uuidv5(date, 'addcd184-a939-11ea-a852-0f0463844a38');\n\n        let newCredit =\n        {\n            id: id,\n            description: debitDescription,\n            amount: Number(debitAmount),\n            date: date\n        }\n        let newCreditData = new Array(...this.state.creditData, newCredit);\n        this.setState({ creditData: newCreditData });\n        this.setState({ totalCredit: this.calculateTotalAmount(newCreditData) });\n\n        event.target.reset();\n    }\n\n    render()\n    {\n        const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\n        const UserProfileComponent = () => \n        (<UserProfile username={this.state.currentUser.username} memberSince={this.state.currentUser.memberSince} />);\n        const LoginComponent = () => (<Login user={this.state.currentUser} mockLogin={this.mockLogin} {...this.props} />);\n\n        const DebitComponent = () => \n        (\n            <Debits \n                data={this.state.debitData} \n                accountBalance={this.state.totalCredit - this.state.totalDebit} \n                addDebitHandler={this.handleAddDebit}\n            />\n        );\n        const CreditComponent = () => \n        (\n            <Credits \n                data={this.state.creditData} \n                accountBalance={this.state.totalCredit - this.state.totalDebit} \n                addCreditHandler={this.handleAddCredit}\n            />\n        );\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <Switch>\n                            <Route exact path=\"/\" component={HomeComponent} />\n                            <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n                            <Route exact path=\"/login\" render={LoginComponent} />\n                            <Route exact path=\"/debits\" render={DebitComponent} />\n                            <Route exact path=\"/credits\" render={CreditComponent} />\n                        </Switch>\n                    </header>\n                </div>\n            </Router>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}